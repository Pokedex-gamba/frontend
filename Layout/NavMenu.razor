@using PokedexGambaApp.Shared
@using System.Net.Http
@using System.Net.Http.Headers
@using System.Text.Json
@using System.Net
@using static System.Net.WebRequestMethods
@inject HttpClient Http
@inject IJSRuntime JSRuntime
@inherits Auth

<div class="top-row ps-3 navbar navbar-dark">
    <div class="container-fluid">
        <a class="navbar-brand" href="">Pokédex Gamba</a>
    </div>
</div>

<div class="@NavMenuCssClass nav-scrollable" @onclick="ToggleNavMenu">

    <nav class="flex-column d-flex flex-column h-100">

        <div class="nav-item px-3">
            <NavLink class="nav-link" href="Inventory" Match="NavLinkMatch.All">
                <h5 class="bi-house-door-fill" style="margin-top: auto; margin-bottom: auto;">
                    <h6 style="margin-left: 5%; margin-top: auto; margin-bottom: auto;">Inventory</h6>
                </h5>
            </NavLink>
        </div>
        <div class="nav-item px-3">
            <NavLink class="nav-link" href="CatchPokemon">
                <h5 class="bi-plus-square-fill" style="margin-top: auto; margin-bottom: auto;">
                    <h6 style="margin-left: 5%; margin-top: auto; margin-bottom: auto;">Catch Pokémon</h6>
                </h5>
            </NavLink>
        </div>
        <div class="nav-item px-3">
            <NavLink class="nav-link" href="Leaderboards">
                <h5 class="bi-list-ol" style="margin-top: auto; margin-bottom: auto;">
                    <h6 style="margin-left: 5%; margin-top: auto; margin-bottom: auto;">Leaderboards</h6>
                </h5>
            </NavLink>
        </div>
        <div class="nav-item px-3">
            <NavLink class="nav-link " href="Users">
                <h5 class="bi-people-fill" style="margin-top: auto; margin-bottom: auto;">
                    <h6 style="margin-left: 5%; margin-top: auto; margin-bottom: auto;">Browse Users</h6>
                </h5>
            </NavLink>
        </div>
        <div class="nav-item px-3">
            <NavLink class="nav-link " href="Trade">
                <h5 class="bi-arrow-left-right" style="margin-top: auto; margin-bottom: auto;">
                    <h6 style="margin-left: 5%; margin-top: auto; margin-bottom: auto;">Trade Pokémon</h6>
                </h5>
            </NavLink>
        </div>
        <div class="nav-item px-3">
            <NavLink class="nav-link " href="GetEnergy">
                <h5 class="bi-lightning-charge-fill" style="margin-top: auto; margin-bottom: auto;">
                    <h6 style="margin-left: 5%; margin-top: auto; margin-bottom: auto;">Get Energy</h6>
                </h5>
            </NavLink>
        </div>



        <div class="mt-auto nav-item px-3">
            <NavLink class="nav-link btn bi bi-person-circle" href="Account" Match="NavLinkMatch.All">
                &nbsp;@(UserInfo != null ? UserInfo.Username : "Account")
            </NavLink>
        </div>
        <!-- Logout button -->
        <div class="mt-0 nav-item px-3">
            <NavLink class="nav-link text-danger btn bi bi-box-arrow-left" @onclick="Logout">
                &nbsp;Logout
            </NavLink>
        </div>
    </nav>
</div>

@code {
    private UserInfo? UserInfo;
    private bool collapseNavMenu = true;

    private string? NavMenuCssClass => collapseNavMenu ? "collapse" : null;

    protected override async Task OnInitializedAsync()
    {
        // Zavolání JS funkce pro načtení tokenu ze sessionStorage
        string token = await JSRuntime.InvokeAsync<string>("storage.getFromSessionStorage", "token");

        await LoadUserInfoAsync();

        //if (token == null)
        //{
        // collapseNavMenu = !collapseNavMenu;
        //}
    }

    private void ToggleNavMenu()
    {
        collapseNavMenu = !collapseNavMenu;
    }

    private async Task Logout()
    {
        await LogoutCurrentUserAsync();
    }

    private async Task LoadUserInfoAsync()
    {
        try
        {
            // Vytvoř požadavek
            HttpRequestMessage request = new HttpRequestMessage(HttpMethod.Get, "/findUserInfo");

            // Zavolání JS funkce pro načtení tokenu ze sessionStorage
            string token = await JSRuntime.InvokeAsync<string>("storage.getFromSessionStorage", "token");

            // Nastav vlastní hlavičky
            request.Headers.Authorization = new AuthenticationHeaderValue("Bearer", token);
            request.Headers.Add("X-Host", "user-info-api.pokedex-gamba.internal");

            // Pošli požadavek
            HttpResponseMessage response = await Http.SendAsync(request);

            if (response.StatusCode == HttpStatusCode.Unauthorized)
            {
                Console.WriteLine("User is unauthorized, token is invalid, forcing logout and redirecting to login");
                await LogoutCurrentUserAsync();
            }

            string result = await response.Content.ReadAsStringAsync();
            UserInfo = JsonSerializer.Deserialize<UserInfo>(result);
        }
        catch (Exception ex)
        {
            Console.WriteLine(ex.Message);
        }
    }
}
