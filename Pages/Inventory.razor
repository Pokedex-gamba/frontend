@page "/inventory"
@inject HttpClient Http
@inject IJSRuntime JSRuntime
@using System.Net.Http
@using System.Net.Http.Headers
@using System.Text.Json
@using PokedexGambaApp.Shared


<PageTitle>Inventory</PageTitle>

<div class="container mt-5">
    <h3 class="text-center mb-4">These are all yours!</h3>
    <div class="container">
        <div class="row">
            @foreach (Pokemon pokemon in PokemonList)
            {
                <div class="col-12 col-sm-6 col-md-4 col-lg-3 mb-4">
                    <div class="card h-100">
                        <div class="wrapper">
                            <img src="@pokemon.FrontDefault" class="card-img-top" />




                            <div class="card-body p-3">
                                <h5 class="card-title text-center">@pokemon.PokemonName</h5>

                                <ul class="list-group list-group-flush">
                                    <li class="list-group-item d-flex justify-content-between">
                                        <strong>HP:</strong> <span class="badge bg-success">@pokemon.BaseHP</span>
                                    </li>
                                    <li class="list-group-item d-flex justify-content-between">
                                        <strong>Attack:</strong> <span class="badge bg-danger">@pokemon.BaseAttack</span>
                                    </li>
                                    <li class="list-group-item d-flex justify-content-between">
                                        <strong>Defense:</strong> <span class="badge bg-warning">@pokemon.BaseDefense</span>
                                    </li>
                                    <li class="list-group-item d-flex justify-content-between">
                                        <strong>Speed:</strong> <span class="badge bg-info">@pokemon.BaseSpeed</span>
                                    </li>
                                    <li class="list-group-item">
                                        <strong>Type:</strong> <span class="text-uppercase text-muted">@pokemon.Type</span>
                                    </li>
                                    <li class="list-group-item">
                                        <strong>Rarity:</strong> <span
                                            class="badge bg-secondary">@pokemon.TotalRarity</span>
                                    </li>

                                    <li class="list-group-item">
                                        <strong>Legendary:</strong>
                                        <span class="text-primary">@(pokemon.Legendary ? "Yes" : "No")</span>
                                    </li>
                                </ul>
                            </div>
                        </div>
                    </div>
                </div>

            }
        </div>
    </div>

    <footer class="text-center mt-5">
        <p class="text-muted"><strong>Debug:</strong> @Debug</p>
    </footer>
    <footer class="text-center mt-5">
        <p class="text-muted"><strong>Exception:</strong> @Exception</p>
    </footer>
</div>

@code {
    private string? Debug;
    private string? Exception;
    private List<Pokemon> PokemonList = new List<Pokemon>();
    protected override async Task OnInitializedAsync()
    {
        // Tvoje logika, třeba načtení dat
        await LoadPokemonsAsync();
    }
    private async Task LoadPokemonsAsync()
    {
        try
        {
            // Vytvoř požadavek
            HttpRequestMessage request = new HttpRequestMessage(HttpMethod.Get, "/pokemon/inventory/getInventory");

            // Zavolání JS funkce pro uložení tokenu do sessionStorage
            string token = await JSRuntime.InvokeAsync<string>("storage.getFromSessionStorage", "token");

            // Nastav vlastní hlavičky
            request.Headers.Authorization = new AuthenticationHeaderValue("Bearer", token);
            request.Headers.Add("X-Host", "inventory-api.pokedex-gamba.internal");

            // Pošli požadavek
            HttpResponseMessage response = await Http.SendAsync(request);
            string result = await response.Content.ReadAsStringAsync();


            PokemonList = JsonSerializer.Deserialize<List<Pokemon>>(result);

            Debug = token;

        }
        catch (Exception ex)
        {
            Exception = ex.Message;
        }
    }
}
