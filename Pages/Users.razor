@page "/Users"

@inherits Auth

@inject HttpClient Http
@inject IJSRuntime JSRuntime
@using System.Net.Http
@using System.Net.Http.Headers
@using System.Text.Json
@using PokedexGambaApp.Shared
@using System.Text.Json.Serialization

<PageTitle>Users</PageTitle>

<div class="container mt-5">
    <h3 class="text-center mb-4">Users</h3>
    <div class="container">
        <div class="row">
            @if (UserList.Any())
            {
                <table class="table table-striped text-center">
                    <thead class="table-dark">
                        <tr>
                            <th>Username</th>
                            <th>Name</th>
                            <th>Surname</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var user in UserList)
                        {
                            <tr>
                                <td>@user.Username</td>
                                <td>@(string.IsNullOrEmpty(user.Name) ? "-" : user.Name)</td>
                                <td>@(string.IsNullOrEmpty(user.Surname) ? "-" : user.Surname)</td>
                            </tr>
                        }
                    </tbody>
                </table>
            }
            else
            {
                <p class="text-center text-muted">No users available at the moment.</p>
            }
        </div>
    </div>
</div>

@code {
    private List<UserEntry> UserList = new List<UserEntry>();

    protected override async Task OnInitializedAsync()
    {
        await EnsureUserIsAuthenticatedAsync();
        await LoadUsersAsync();
    }

    private async Task LoadUsersAsync()
    {
        try
        {
            // Vytvoř požadavek
            HttpRequestMessage request = new HttpRequestMessage(HttpMethod.Get, "http://127.0.0.1:8085/findAllUserInfo");

            // Zavolání JS funkce pro načtení tokenu ze sessionStorage
            string token = await JSRuntime.InvokeAsync<string>("storage.getFromSessionStorage", "token");

            // Nastav vlastní hlavičky
            request.Headers.Authorization = new AuthenticationHeaderValue("Bearer", token);
            request.Headers.Add("X-Host", "user-info-api.pokedex-gamba.internal");

            // Pošli požadavek
            HttpResponseMessage response = await Http.SendAsync(request);
            response.EnsureSuccessStatusCode();

            // Zpracuj JSON odpověď
            string result = await response.Content.ReadAsStringAsync();
            UserList = JsonSerializer.Deserialize<List<UserEntry>>(result) ?? new List<UserEntry>();
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Error loading users: {ex.Message}");
        }
    }

    private class UserEntry
    {
        [JsonPropertyName("id")]
        public string Id { get; set; } = string.Empty;

        [JsonPropertyName("username")]
        public string Username { get; set; } = string.Empty;

        [JsonPropertyName("name")]
        public string Name { get; set; } = string.Empty;

        [JsonPropertyName("surname")]
        public string Surname { get; set; } = string.Empty;
    }
}
